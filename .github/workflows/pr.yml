name: Pull Request Quality Checks

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

# To add more PHP versions, change ['8.4'] to ['8.4', '8.5'] in all matrix definitions below

jobs:
  phpcs-check:
    name: "üîç PHP CodeSniffer (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Run PHPCS check
        run: composer phpcs-check

  pint-check:
    name: "üé® Laravel Pint (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Run Pint check
        run: composer pint-check

  rector-check:
    name: "üîÑ Rector (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Run Rector check
        run: composer rector-check

  phpstan-analysis:
    name: "üîé PHPStan Analysis (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Run PHPStan analysis
        run: composer analyse

  coverage-tests:
    name: "üìä Coverage Tests (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Run coverage tests
        run: composer test:coverage

  audit-check:
    name: "üîí Security Audit (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Run security audit
        run: composer security-audit

  normalize-check:
    name: "üìù Composer Normalize (PHP ${{ matrix.php-version }})"
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pcov, dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: pcov
          
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-
            ${{ runner.os }}-php-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Check composer normalize
        run: composer normalize-check